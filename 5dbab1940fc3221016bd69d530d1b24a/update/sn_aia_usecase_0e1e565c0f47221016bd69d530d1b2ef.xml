<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sn_aia_usecase">
    <sn_aia_usecase action="INSERT_OR_UPDATE">
        <applicability_script><![CDATA[/** 
 * Function to process inputs related to ServiceNow change request operations 
 * 
 * @param {Object} inputs - The input parameters object 
 * @param {string} inputs.objective - The purpose or goal of the operation 
 * @param {string} inputs.execution_plan_id - Unique identifier for the execution plan 
 * @param {Object} inputs.context - Context information about the ServiceNow change request 
 * @param {string} inputs.context.url - The URL of the change request in Service Operations Workspace 
 * @param {string} inputs.context.table - The ServiceNow table name (e.g., 'change_request') 
 * @param {string} inputs.context.record_sys_id - The sys ID of the record 
 * @param {string} inputs.context.route - The route type (e.g., 'record') 
 * @param {string} inputs.context.additional_context - Additional contextual information in JSON format 
 * @param {string} inputs.context.experience - The UI experience name (e.g., 'Service Operations Workspace') 
 * @param {string} inputs.context.number - The request number 
 * @param {string} inputs.context.portal - The portal ID 
 * 
 * @returns {boolean} Returns true/false 
 */
(function(inputs) {
    /** const { objective, execution_plan_id, context } = inputs; 
    return context.table == 'incident' ; */
    return false;
})(inputs);]]></applicability_script>
        <base_plan># Goal
Efficiently Classify defects by fetching relevant record information, predicting and updating fields like Bucket and retrieving necessary context, regardless of the amount of detail provided.

# Instructions

To Classify a GAIC Defect record, ALWAYS follow this progression of steps:
1. Use "Categorize GAIC Defect AI agent" to fetch record details of &lt;GAIC Defect number&gt;.
2. Use the "Categorize GAIC Defect AI agent" to determine the appropriate Bucket field choice to the record using the GAIC Defects records fields as input.
3. Update the record with the above predicted fields (if values are present).


## Additional Instructions
MANDATORY: While following the steps above, never ask the user for additional instruction. ALWAYS follow the instructions above. All requests or format display values are essential and should not be skipped.
- âœ… **Do NOT** Ask for User inputs at any point of time.</base_plan>
        <description>When triggered this workflow fetches details from the records in the x_snc_defect_bucke_gaic_defects table using the records number and predicts the values for its corresponding fields based off keywords. The workflow will attempt to update the corresponding bucket field. It aides in classifying defects.</description>
        <execution_mode>copilot</execution_mode>
        <internal_name>global.x_snc_defect_bucke.Defect Classifier</internal_name>
        <name>Defect Classifier</name>
        <parent/>
        <record_type>template</record_type>
        <source_id/>
        <strategy display_value="ReActive Planner">b264c470ff1022106c36ffffffffff67</strategy>
        <sys_class_name>sn_aia_usecase</sys_class_name>
        <sys_created_by>alberto.guerra@snc</sys_created_by>
        <sys_created_on>2025-07-26 06:13:48</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>0e1e565c0f47221016bd69d530d1b2ef</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Defect Classifier</sys_name>
        <sys_package display_value="Defect Bucket" source="x_snc_defect_bucke">5dbab1940fc3221016bd69d530d1b24a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Defect Bucket">5dbab1940fc3221016bd69d530d1b24a</sys_scope>
        <sys_update_name>sn_aia_usecase_0e1e565c0f47221016bd69d530d1b2ef</sys_update_name>
        <sys_updated_by>alberto.guerra@snc</sys_updated_by>
        <sys_updated_on>2025-08-01 19:17:16</sys_updated_on>
        <team display_value="Defect Classifier">ed8fda9c0f47221016bd69d530d1b2e0</team>
    </sn_aia_usecase>
</record_update>
