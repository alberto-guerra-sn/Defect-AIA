<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sn_aia_agent">
    <sn_aia_agent action="INSERT_OR_UPDATE">
        <agent_type>internal</agent_type>
        <applicability_script><![CDATA[/** 
 * Function to process inputs related to ServiceNow change request operations 
 * 
 * @param {Object} inputs - The input parameters object 
 * @param {string} inputs.objective - The purpose or goal of the operation 
 * @param {string} inputs.execution_plan_id - Unique identifier for the execution plan 
 * @param {Object} inputs.context - Context information about the ServiceNow change request 
 * @param {string} inputs.context.url - The URL of the change request in Service Operations Workspace 
 * @param {string} inputs.context.table - The ServiceNow table name (e.g., 'change_request') 
 * @param {string} inputs.context.record_sys_id - The sys ID of the record 
 * @param {string} inputs.context.route - The route type (e.g., 'record') 
 * @param {string} inputs.context.additional_context - Additional contextual information in JSON format 
 * @param {string} inputs.context.experience - The UI experience name (e.g., 'Service Operations Workspace') 
 * @param {string} inputs.context.number - The request number 
 * @param {string} inputs.context.portal - The portal ID 
 * @param {string} inputs.context.device_type - The device type from which the experience is accessed, e.g.'mweb' 
 * @param {string} inputs.context.deployment_id - The unique identifier for the assistant deployment 
 * @param {string} inputs.context.assistant_type - The type of assistant, e.g., 'nava' 
 * 
 * @returns {boolean} Returns true/false 
 */
(function(inputs) {
    /** const { objective, execution_plan_id, context } = inputs; 
    return context.table == 'incident' ; */
    return false;
})(inputs);]]></applicability_script>
        <compiled_handbook/>
        <description>Automatically categorizes records by analyzing their short descriptions, generating new bucket categories as needed, and assigning records to the most relevant existing or newly created buckets. Designed for users managing large volumes of uncategorized data who require automated, pattern-based categorization.</description>
        <external_agent_configuration/>
        <instructions>1. Fetch all records that do not have a value in the bucket field.
2. Retrieve the short descriptions for each uncategorized record.
3. Analyze the short descriptions to identify meaningful patterns or clusters.
4. Fetch the current list of available bucket choices.
5. For each identified pattern, check if a matching bucket already exists.
6. If a matching bucket does not exist for a pattern, create a new bucket choice.
7. Assign each record to the most relevant existing or newly created bucket based on its short description.
8. Update the bucket field for each processed record with the assigned bucket value.</instructions>
        <internal_name>global.x_snc_defect_bucke.Bucket Categorizer Agent</internal_name>
        <name>Bucket Categorizer Agent</name>
        <parent/>
        <processing_message/>
        <proficiency>- Expert in analyzing uncategorized records by examining their short descriptions, identifying meaningful patterns or clusters, and determining the most appropriate bucket assignment. Capable of generating new bucket choices only when necessary, ensuring that records are consistently and efficiently categorized while maintaining data integrity and minimizing unnecessary category proliferation.
- Proficient in executing a systematic categorization workflow, including fetching uncategorized records, retrieving and analyzing short descriptions, comparing patterns against existing bucket choices, creating new buckets when needed, assigning records to the most relevant buckets, and updating the bucket field for each record. This ensures a repeatable, auditable, and efficient categorization process.
- Able to utilize the 'Bulk Category Generator' TOOL to efficiently gather GAIC Defect records lacking cluster assignments, analyze their short description patterns, and generate new categories as needed. The agent can output structured JSON data mapping defect numbers to their assigned categories, streamlining the categorization of large record sets and supporting further automation or integration with other systems.</proficiency>
        <record_type>template</record_type>
        <role>Responsible for analyzing uncategorized records by examining their short descriptions, identifying meaningful patterns, and generating new category choices for the bucket field. The agent assigns records to existing buckets when appropriate and only creates new buckets when no suitable category exists. It maintains data consistency and optimizes categorization efficiency.</role>
        <source_id/>
        <strategy display_value="ReAct">f0bff21f9f13c6108f431597d90a1c74</strategy>
        <sys_class_name>sn_aia_agent</sys_class_name>
        <sys_created_by>alberto.guerra@snc</sys_created_by>
        <sys_created_on>2025-08-05 02:34:29</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>aafa056b2bcf2610bdb7f808b891bfd8</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Bucket Categorizer Agent</sys_name>
        <sys_package display_value="Defect Bucket" source="x_snc_defect_bucke">5dbab1940fc3221016bd69d530d1b24a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Defect Bucket">5dbab1940fc3221016bd69d530d1b24a</sys_scope>
        <sys_update_name>sn_aia_agent_aafa056b2bcf2610bdb7f808b891bfd8</sys_update_name>
        <sys_updated_by>alberto.guerra@snc</sys_updated_by>
        <sys_updated_on>2025-08-05 06:20:20</sys_updated_on>
    </sn_aia_agent>
</record_update>
