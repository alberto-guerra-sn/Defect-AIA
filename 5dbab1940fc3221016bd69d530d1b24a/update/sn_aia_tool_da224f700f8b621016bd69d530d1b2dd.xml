<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sn_aia_tool">
    <sn_aia_tool action="INSERT_OR_UPDATE">
        <active>true</active>
        <description>This tool analyzes the full_defect_context field of defect records for occurrences of keywords per group. Counts how many keywords from each group appears and identifies the group with the highest number of keyword matches. Sets keyword_bucket to that group.</description>
        <input_schema>[{"name":"full_context","description":"The full_defect_context field of a record in the x_snc_defect_bucke_gaic_defects table","mandatory":false}]</input_schema>
        <name>Defect Keyword Tool</name>
        <record_type>custom</record_type>
        <script><![CDATA[(function(inputs) {
  var context = (inputs.full_context || '').toLowerCase();
 
  var keywords = {
    "Guardian": ['guardian', 'offensive', 'offensiveness', 'profane', 'injection', 'harmful', 'sensitive', 'trustbuilder'],
    "Connection Issue": ['200000', 'connection url', 'proxy', 'endpoint', 'connectivity', 'routing', 'connection alias', 'http request'],
    "Configuration": ['400001', '400002', 'configuration', 'config'],
    "Timeout": ['timeout', 'timing out', 'slow', 'response time', 'waiting', 'execution', 'delay', 'latency'],
    "Setup": ['installation', 'upgrade', 'setup', 'activation', 'initialization', 'deployment', 'repair', 'zboot', 'zbooting'],
    "Plugin": ['plugin', 'app', 'extension', 'integration', 'controller', 'capability', 'application', 'feature'],
    "Security": ['acl', 'business rule', 'security', 'bypass', 'privilege', 'vulnerable']
  };
 
  function countMatches(list) {
    return list.filter(function(word) {
      return context.includes(word);
    }).length;
  }
 
  var bestMatch = null;
  var bestScore = 0;
 
  for (var group in keywords) {
    var score = countMatches(keywords[group]);
    if (score > bestScore) {
      bestScore = score;
      bestMatch = group;
    }
  }
 
  if (bestScore >= 2) {
    return { keyword_bucket: bestMatch };
  } else {
    return { keyword_bucket: '' };  // fallback to GenAI tool
  }
 
})(inputs);]]></script>
        <sys_class_name>sn_aia_tool</sys_class_name>
        <sys_created_by>alberto.guerra@snc</sys_created_by>
        <sys_created_on>2025-07-27 22:02:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_id>da224f700f8b621016bd69d530d1b2dd</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Defect Keyword Tool</sys_name>
        <sys_overrides/>
        <sys_package display_value="Defect Bucket" source="x_snc_defect_bucke">5dbab1940fc3221016bd69d530d1b24a</sys_package>
        <sys_policy/>
        <sys_scope display_value="Defect Bucket">5dbab1940fc3221016bd69d530d1b24a</sys_scope>
        <sys_update_name>sn_aia_tool_da224f700f8b621016bd69d530d1b2dd</sys_update_name>
        <sys_updated_by>alberto.guerra@snc</sys_updated_by>
        <sys_updated_on>2025-07-28 09:20:47</sys_updated_on>
        <target_document/>
        <target_document_table>sn_aia_tool</target_document_table>
        <type>script</type>
    </sn_aia_tool>
</record_update>
